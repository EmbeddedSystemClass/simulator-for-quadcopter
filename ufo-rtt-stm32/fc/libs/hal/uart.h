/** * @file uart.h * @brief UART interface */#ifndef _UART_H#define _UART_H/** * @addtogroup ORL * @} *//** * @addtogroup HAL * @{ *//**  * @enum packet_type * packet type definitions  */enum packet_type {    GET_GYRO_DATA,  /**< Get gyroscope data */     GET_ACCL_DATA,  /**< Get accelerometor data */        MAX_PACKET_TYPE /** Max packet type */};/** * Max packet length */#define MAX_PACKET_LEN  28typedef struct uart_packet_t {    uint8_t type;                       /**< packet type */    uint8_t length;                     /**< packet length */    uint8_t buf[MAX_PACKET_LEN];        /**< buffer of the packet */} uart_packet_t;void uart_hw_init();/** * send a packet to PC via uart * * @param packet the packet sent to uart * @return success 0, negetive otherwise * @note the packet length should not be greater than MAX_PACKET_LEN */int uart_packet_tx(struct uart_packet_t *packet);/** * send a gyro packet to PC via uart * * @return 0 success, negetive otherwise */int gyro_packet_tx();/** @} *//** @} */#endif /* _UART_H */